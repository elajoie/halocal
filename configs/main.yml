---
- name: Setup Home Automation
  hosts: ha
  gather_facts: false
  remote_user: "{{ ansible_user }}"
  vars_files: 
#    - vault
    - vars.yml
  tasks:
#    - name: Firewall HA Rules
#      ansible.posix.firewalld:
#        port: "{{ item }}"
#        permanent: true
#        state: enabled
#        immediate: yes
#      with_items:
#        - "8123/tcp"
#        - "1883/tcp"
#        - "1883/udp"
#      become: true

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ homedir }}/.homeassistant"
        state: directory
        mode: '0755'

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ homedir }}/.mosquitto"
        state: directory
        mode: '0755'

    - name: Build HA image
      containers.podman.podman_image:
        name: localhost/homeassistant
        tag: latest
        path: "{{ homedir }}/halocal/hass"
      become: true

#    - name: Build MQTT image
#      containers.podman.podman_image:
#        name: localhost/mosquitto
#        tag: latest
#        path: "{{ homedir }}/halocal/mosquitto"
#      become: true

    - name: Start and create systemd service for Home Assistant
      containers.podman.podman_container:
        name: homeassistant
        image: localhost/homeassistant
        state: present
        recreate: yes
        expose:
          - 8123
        volumes:
          - "{{ homedir }}/.homeassistant/:/root/.homeassistant/"
        generate_systemd:
          path: /etc/systemd/system/
          restart_policy: always
          time: 120
          names: true
          container_prefix: automation
      become: true
      notify: "restart ha"

#    - name: Start and create systemd service for Mosquitto
#      containers.podman.podman_container:
#        name: mosquitto
#        image: localhost/mosquitto
#        state: present
#        recreate: yes
#        expose:
#          - 1883
#        volumes:
#          - "{{ homedir }}/.mosquitto:/etc/mosquitto"
#        generate_systemd:
#          path: /etc/systemd/system/
#          restart_policy: always
#          time: 120
#          names: true
#          container_prefix: automation
#      become: true
#      notify: "restart mosquitto"


#    - name: Template for hass configs
#      ansible.builtin.template:
#        src: "{{ item }}.j2"
#        dest: "{{ homedir }}/.homeassistant/{{ item }}"
#      with_items:
#        - configuration.yaml
#        - automations.yaml
#        - binary_sensor.yaml
#        - customize.yaml
#        - groups.yaml
#        - scenes.yaml
#        - scripts.yaml
#        - sensor.yaml
#        - switch.yaml
#        - secrets.yaml
#    - name: Template for mosquitto configs
#      tansible.builtin.template:
#        src: mosquitto.conf.j2
#        dest: "{{ homedir }}/.mosquitto/mosquitto.conf"

  handlers:
    - name: Restart ha service
      ansible.builtin.service:
        name: automation-homeassistant.service
        state: reloaded
      listen: "restart ha"
      become: true

    - name: Restart mosquitto service
      ansible.builtin.service:
        name: automation-mosquitto.service
        state: reloaded
      listen: "restart mosquitto"
      become: true
...