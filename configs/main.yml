---
- name: Setup Home Automation
  hosts: ha
  gather_facts: false
  remote_user: "{{ ansible_user }}"
  vars_files: 
#    - vault
    - vars.yml
  tasks:
#    - name: Firewall HA Rules
#      ansible.posix.firewalld:
#        port: "{{ item }}"
#        permanent: true
#        state: enabled
#        immediate: yes
#      with_items:
#        - "8123/tcp"
#        - "1883/tcp"
#        - "1883/udp"
#      become: true

    - name: Start and create systemd for both HA and Mosquitto
      ansible.builtin.command:
        cmd: "/usr/bin/podman rm --all --force"
      become: true

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ homedir }}/.homeassistant"
        state: directory
        mode: '0755'

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ homedir }}/.mosquitto"
        state: directory
        mode: '0755'

    - name: Build HA image
      containers.podman.podman_image:
        name: localhost/homeassistant
        tag: latest
        path: "{{ homedir }}/halocal/hass"
      become: true

    - name: Build MQTT image
      containers.podman.podman_image:
        name: localhost/mosquitto
        tag: latest
        path: "{{ homedir }}/halocal/mosquitto"
      become: true

    - name: Start and create systemd for both HA and Mosquitto
      ansible.builtin.command:
        cmd: "/usr/bin/podman run -dt --rm -p 1883:1883 --name mosquitto -v {{ homedir }}/.mosquitto:/etc/mosquitto:Z localhost/mosquitto:latest"
      become: true

    - name: Start and create systemd for both HA and Mosquitto
      ansible.builtin.command:
        cmd: "/usr/bin/podman run -dt --rm -p 8123:8123 --name homeassistant -v {{ homedir }}/.homeassistant:/root/.homeassistant:Z localhost/homeassistant:latest"
      become: true

    - name: Start and create systemd for both HA and Mosquitto
      ansible.builtin.command:
        cmd: "/usr/bin/podman generate systemd --new --name mosquitto > /etc/systemd/system/mosquitto.service"
      become: true

    - name: Start and create systemd for both HA and Mosquitto
      ansible.builtin.command:
        cmd: "/usr/bin/podman generate systemd --new --name homeassistant > /etc/systemd/system/homeassistant.service"
      become: true

    - name: Start and create systemd for both HA and Mosquitto
      ansible.builtin.command:
        cmd: "/usr/bin/systemctl enable --now mosquitto.service"
      become: true
      notify:
        - "restart ha"
        - "restart mosquitto"

    - name: Start and create systemd for both HA and Mosquitto
      ansible.builtin.command:
        cmd: "/usr/bin/systemctl enable --now homeassistant.service"
      become: true
      notify:
        - "restart ha"
        - "restart mosquitto"



#    - name: Template for hass configs
#      ansible.builtin.template:
#        src: "{{ item }}.j2"
#        dest: "{{ homedir }}/.homeassistant/{{ item }}"
#      with_items:
#        - configuration.yaml
#        - automations.yaml
#        - binary_sensor.yaml
#        - customize.yaml
#        - groups.yaml
#        - scenes.yaml
#        - scripts.yaml
#        - sensor.yaml
#        - switch.yaml
#        - secrets.yaml
#    - name: Template for mosquitto configs
#      tansible.builtin.template:
#        src: mosquitto.conf.j2
#        dest: "{{ homedir }}/.mosquitto/mosquitto.conf"

  handlers:
    - name: Restart ha service
      ansible.builtin.service:
        name: automation-homeassistant.service
        state: started
      listen: "restart ha"
      become: true

    - name: Restart mosquitto service
      ansible.builtin.service:
        name: automation-mosquitto.service
        state: reloaded
      listen: "restart mosquitto"
      become: true
...